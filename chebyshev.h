/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CHEBYSHEV_H_RPCGEN
#define _CHEBYSHEV_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct input_data {
	struct {
		u_int A_len;
		double *A_val;
	} A;
	struct {
		u_int b_len;
		double *b_val;
	} b;
	int size;
	int max_iter;
};
typedef struct input_data input_data;

struct output_data {
	struct {
		u_int x_len;
		double *x_val;
	} x;
	double time;
	double residual; 
};
typedef struct output_data output_data;

#define CHEBYSHEV_PROG 0x20000001
#define CHEBYSHEV_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define SOLVE 1
extern  output_data * solve_1(input_data *, CLIENT *);
extern  output_data * solve_1_svc(input_data *, struct svc_req *);
extern int chebyshev_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SOLVE 1
extern  output_data * solve_1();
extern  output_data * solve_1_svc();
extern int chebyshev_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_input_data (XDR *, input_data*);
extern  bool_t xdr_output_data (XDR *, output_data*);

#else /* K&R C */
extern bool_t xdr_input_data ();
extern bool_t xdr_output_data ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CHEBYSHEV_H_RPCGEN */
