/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CZEBYSZEW_H_RPCGEN
#define _CZEBYSZEW_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef double DynamicArray[25];

struct LinearSystem {
	int size;
	DynamicArray matrix[25];
	DynamicArray vector;
	double errorTolerance;
	int maxIterations;
};
typedef struct LinearSystem LinearSystem;

struct SolverResult {
	DynamicArray solutionVector;
	int iterationsPerformed;
	int status;
};
typedef struct SolverResult SolverResult;

#define CHEBYSHEV_SOLVER_PROG 0x31234567
#define CHEBYSHEV_SOLVER_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define calculateChebyshevSolution 1
extern  SolverResult * calculatechebyshevsolution_1(LinearSystem *, CLIENT *);
extern  SolverResult * calculatechebyshevsolution_1_svc(LinearSystem *, struct svc_req *);
extern int chebyshev_solver_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define calculateChebyshevSolution 1
extern  SolverResult * calculatechebyshevsolution_1();
extern  SolverResult * calculatechebyshevsolution_1_svc();
extern int chebyshev_solver_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_DynamicArray (XDR *, DynamicArray);
extern  bool_t xdr_LinearSystem (XDR *, LinearSystem*);
extern  bool_t xdr_SolverResult (XDR *, SolverResult*);

#else /* K&R C */
extern bool_t xdr_DynamicArray ();
extern bool_t xdr_LinearSystem ();
extern bool_t xdr_SolverResult ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CZEBYSZEW_H_RPCGEN */
